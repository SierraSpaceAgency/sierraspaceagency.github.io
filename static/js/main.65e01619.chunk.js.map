{"version":3,"sources":["components/HomePageComponent.js","components/PeoplePageComponent.js","components/WorkPageComponent.js","components/LaunchPageComponent.js","App.js","serviceWorker.js","index.js"],"names":["HomePageComponent","props","react_default","a","createElement","className","src","alt","PeoplePageComponent","href","WorkPageComponent","lib_default","autoplay","autoplaySpeed","infinite","speed","slidesToShow","slidesToScroll","pauseOnHover","responsive","breakpoint","settings","LaunchPageComponent","onClick","onLaunchClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","launching","_this2","self","homePage","scrollIntoView","block","behavior","duration","setState","launchRocket","addEventListener","event","window","location","_this3","ref","element","src_components_HomePageComponent","src_components_PeoplePageComponent","src_components_WorkPageComponent","src_components_LaunchPageComponent","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65e01619.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePageComponent.css';\n\nconst HomePageComponent = (props) => (\n  <section className = \"HomePage\">\n    <header>\n      <img className = \"SSALogo\" src = \"ssa-logo.png\" alt = \"SSA Logo\"></img>\n      <p className = \"SSATitle\">Sierra Space Agency</p>\n    </header>\n  </section>\n)\n\nexport default HomePageComponent;\n","import React from 'react';\nimport './PeoplePageComponent.css';\n\nconst PeoplePageComponent = props => (\n  <section className = \"PeoplePage\">\n    <div className = \"PeoplePageTextContent\">\n      <div className = \"PeoplePageTitle TitleText\">Who We Are</div>\n      <p className = \"PeoplePageText\">A veteran team of startup designers and engineers</p>\n    </div>\n    <ul className = \"PeopleList\">\n      <li className = \"Person\">\n        <a className = \"PersonLink\" href = \"https://andrewferrarone.com\">\n          <img className = \"PersonImage\" src = \"Andy.png\" alt = \"\"/>\n          <div className = \"Label PersonName\">Andy</div>\n          <div className = \"Label PersonTitle\">DESIGN</div>\n        </a>\n      </li>\n      <li className = \"Person\">\n        <a className = \"PersonLink\" href = \"http://briancox.co\">\n          <img className = \"PersonImage\" src = \"Brian.png\" alt = \"\"/>\n          <div className = \"Label PersonName\">Brian</div>\n          <div className = \"Label PersonTitle\">PRODUCT</div>\n        </a>\n      </li>\n      <li className = \"Person\">\n        <a className = \"PersonLink\" href = \"https://connerhinman.com\">\n          <img className = \"PersonImage\" src = \"Conner.png\" alt = \"\"/>\n          <div className = \"Label PersonName\">Conner</div>\n          <div className = \"Label PersonTitle\">ENGINEERING</div>\n        </a>\n      </li>\n      <li className = \"Person\">\n        <img className = \"PersonImage\" src = \"Grace.png\" alt = \"\"/>\n        <div className = \"Label PersonName\">Grace</div>\n        <div className = \"Label PersonTitle\">ENGINEERING</div>\n        </li>\n      <li className = \"Person\">\n        <img className = \"PersonImage\" src = \"Kevin.png\" alt = \"\"/>\n        <div className = \"Label PersonName\">Kevin</div>\n        <div className = \"Label PersonTitle\">ENGINEERING</div>\n      </li>\n      <li className = \"Person\">\n        <img className = \"PersonImage\" src = \"Sally.png\" alt = \"\"/>\n        <div className = \"Label PersonName\">Sally</div>\n        <div className = \"Label PersonTitle\">ENGINEERING</div>\n      </li>\n    </ul>\n  </section>\n)\n\nexport default PeoplePageComponent;\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport './WorkPageComponent.css';\n\nconst WorkPageComponent = props => {\n\n  // Slider settings\n  var settings = {\n      autoplay: true,\n      autoplaySpeed: 2000,\n      infinite: true,\n      speed: 1000,\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      pauseOnHover: true,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2\n          }\n        }\n      ]\n    };\n\n  return (\n    <section className = \"WorkPage\">\n      <div className = \"WorkPageTextContent\">\n        <div className = \"WorkPageTitle TitleText\">What We Do</div>\n        <p className = \"WorkPageText\">We build dangerously fun apps. Funded by corporate special ops contracting.</p>\n      </div>\n      <div className = \"WorkPageCarouselContainer\">\n        <Slider {...settings}>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src = \"CNN.png\" alt = \"\"/></div>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src = \"Scoutmob.png\" alt = \"\"/></div>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src=\"YikYak.png\" alt = \"\"/></div>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src=\"Moments.png\" alt = \"\"/></div>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src = \"Liftoff.png\" alt = \"\"/></div>\n          <div className = \"WorkPageCarouselItem\"><img className = \"WorkPageCarouselImage\" src = \"Index.png\" alt = \"\"/></div>\n        </Slider>\n      </div>\n    </section>\n  );\n}\n\nexport default WorkPageComponent;\n","import React from 'react';\nimport './LaunchPageComponent.css';\n\nconst LaunchPageComponent = props => (\n  <section className = \"LaunchPage\">\n    <main className = \"LaunchPageMainContent\">\n      <img className = \"LaunchPageGradientImage\" src = \"black-gradient.png\" alt = \"\"/>\n      <p className = \"LaunchPageMainContentTitle\">Ready to launch?</p>\n      <p className = \"LaunchPageMainContentText TitleText\">Make it happen</p>\n      <div className = \"ContentScroller\" onClick = {() => props.onLaunchClick()}>\n        <p className = \"ContentScrollerTitle\">{\"LAUNCH\"}</p>\n        <img className = \"ContentScrollerImage\" src = \"arrow-launch.png\" alt = \"Scroll down\"/>\n      </div>\n    </main>\n    <img className = \"LaunchPageMountainRange\" src = \"mountain-range.png\" alt = \"\"/>\n  </section>\n)\n\nexport default LaunchPageComponent;\n","import React, { Component } from 'react';\nimport HomePageComponent from './components/HomePageComponent';\nimport PeoplePageComponent from './components/PeoplePageComponent';\nimport WorkPageComponent from './components/WorkPageComponent';\nimport LaunchPageComponent from './components/LaunchPageComponent';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      launching: false\n    }\n  }\n\n  /* Called when the launch button at the bottom is clicked */\n  onLaunchClick() {\n    // grab this for use in the addeventlistener callback\n    let self = this;\n    // scroll to the very top\n    this.homePage.scrollIntoView({ block: \"start\", behavior: \"smooth\", duration: 2.0 });\n    // set launching state to true so the rocket launches\n    this.setState({\n      launching: true\n    }, () => {\n      // add an event listener to get rid of the rocket when its animation ends\n      this.launchRocket.addEventListener(\"animationend\",\n      function(event) {\n        // reset the rocket launch\n        self.setState({launching: false});\n        // launch a mailto\n        window.location.href = \"mailto:launch@sierraspaceagency.com?subject=Launch\";\n\n      }, false);\n\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div ref = { (element) => {this.homePage = element;} }></div>\n        <HomePageComponent />\n        <PeoplePageComponent />\n        <WorkPageComponent />\n        <LaunchPageComponent onLaunchClick = {() => this.onLaunchClick()} />\n        <img className = \"RocketBoosterImage\" src = \"launch-dock.png\" alt = \"\"/>\n        {\n          /** if we're in the launching state **/\n          this.state.launching ?\n          /** hide the original image, show the launching image and animate its launch **/\n          (\n            <div>\n              <img className = \"RocketImage hidden\" src = \"rocket-ship-still.png\" alt = \"\"/>\n              <img ref = { (element) => {this.launchRocket = element;} } className = \"RocketImageLaunch animate-blast-off\" src = \"rocket-ship-launch.png\" alt = \"\"/>\n            </div>\n          ) :\n          /** otherwise show the original image and hide the launching image **/\n          (\n            <div>\n              <img className = \"RocketImage\" src = \"rocket-ship-still.png\" alt = \"\"/>\n              <img className = \"RocketImageLaunch hidden\" src = \"rocket-ship-launch.png\" alt = \"\"/>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}